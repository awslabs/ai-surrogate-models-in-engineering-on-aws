#
# Logging configuration using Python3 format.
# See https://docs.python.org/3/library/logging.config.html
#
# Loggers follow module namespaces hierarchically.
#
# NOTE: Use `mlsimkit.common.logging.FileHandler` so parent directories
#       are created automatically and so --log-prefix-dir
#       is prepended to the filename.
#
version: 1
disable_existing_loggers: False

formatters:
  simple:
    format: '[%(levelname)s] %(message)s'

  # also include timestamp and logger name
  detailed:
    format: '%(asctime)s - %(levelname)s [%(name)s] %(message)s'

  # also include filename and line number
  debug:
    format: '%(asctime)s - %(levelname)s [%(filename)s:%(lineno)d][%(name)s] %(message)s'

handlers:
  # Log simple messages to the console (use --log-level to override console)
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout      # default is sys.stderr

  # Log all info message to file. Ovewrites existing files.
  root:
    level: INFO
    formatter: detailed
    class: mlsimkit.common.logging.FileHandler
    filename: learn.log
    mode: 'w'    # truncates any existing file

  #
  # Log from the top-level learn module to debug.log.
  #
  # A new debug.log is created on every start, but old copies
  # are kept. Customize the logging to fit your use case.
  # See user guide for options.
  #
  mlsimkit.learn:
    level: DEBUG
    formatter: detailed
    class: mlsimkit.common.logging.FileHandler
    filename: debug.log
    mode: 'w'               # overwrites, a new log for each command
    rotateOnExists: True    # make a copy on start
    backupCount: 10         # keep this many rotated copies

root:
  level: NOTSET
  handlers: [console, root]

loggers:
  mlsimkit.learn:
    level: DEBUG
    propagate: yes
    handlers: [mlsimkit.learn]
